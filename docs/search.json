[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ribbon authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/Examples.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Examples","text":"ribbon provides ggplot2 extension produce glyph plots geom_glyph_ribbon() geom_glyph_segment(). functions create ribbon geometry designed display glyphs based combination x_major y_major. x_minor value, geom_glyph_ribbon() displays y interval defined ymin_minor ymax_minor.","code":""},{"path":"/articles/Examples.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Examples","text":"","code":"# Download the development version from GitHub: devtools::install_github(\"maliny12/ribbon\")"},{"path":"/articles/Examples.html","id":"options","dir":"Articles","previous_headings":"","what":"Options","title":"Examples","text":"Options allow modify functions behave altering parameters meet specific needs. global options affect glyphs.","code":""},{"path":"/articles/Examples.html","id":"aesthetics","dir":"Articles","previous_headings":"","what":"Aesthetics","title":"Examples","text":"Aesthetics parameters can map data using geom_glyph_ribbon(mapping = aes(…)). ribbon provides aesthetics geom_glyph_ribbon geom_glyph_segment() available geom_ribbon() geom_segment(), also introduces additional unique options.","code":""},{"path":[]},{"path":[]},{"path":"/articles/Examples.html","id":"comparison-between-global-rescale-and-local-rescale","dir":"Articles","previous_headings":"Examples > GeomGlyphRibbon","what":"Comparison between global rescale and local rescale","title":"Examples","text":"(……)","code":"p1 <- aus_temp |>    ggplot(aes(x_major = long, y_major = lat,               x_minor = month, ymin_minor = tmin, ymax_minor = tmax)) +   geom_sf(data = abs_ste, color = grey(0.7), fill = NA,           inherit.aes = FALSE)  +   add_glyph_boxes(color = \"dodgerblue3\") +   add_ref_lines(color = \"dodgerblue3\") +   geom_glyph_ribbon(global_rescale = FALSE, color = \"dodgerblue3\", fill = \"dodgerblue3\") +   theme_map() +   coord_sf(xlim = c(110,155)) +   labs(title = \"Local Rescale\") +   theme(plot.title = element_text(hjust = 0.5),         panel.background = element_rect(fill = \"white\", color = NA),         plot.background = element_rect(fill = \"white\", color = NA))  p2 <- aus_temp |>    ggplot(aes(x_major = long, y_major = lat,               x_minor = month, ymin_minor = tmin, ymax_minor = tmax)) +   geom_sf(data = abs_ste, color = grey(0.7), fill = NA,           inherit.aes = FALSE)  +    add_glyph_boxes(color = \"dodgerblue3\") +    add_ref_lines(color = \"dodgerblue3\") +   geom_glyph_ribbon(global_rescale = TRUE, color = \"dodgerblue3\", fill = \"dodgerblue3\") +   theme_map() +   coord_sf(xlim = c(110,155)) +   labs(title = \"Global Rescale\") +   theme(plot.title = element_text(hjust = 0.5),         panel.background = element_rect(fill = \"white\", color = NA),         plot.background = element_rect(fill = \"white\", color = NA))  # Using gridExtra and grid packages to add neatline to the plot grid.arrange(p1, p2, ncol = 2)  grid.rect(     width = 0.98,     height = 0.98,     gp = grid::gpar(       lwd = 0.25,       col = \"black\",       fill = NA     )   )"},{"path":"/articles/Examples.html","id":"mapping-precipitation-across-australia-with-glyphs","dir":"Articles","previous_headings":"Examples > GeomGlyphRibbon","what":"Mapping precipitation across Australia with glyphs","title":"Examples","text":"(……)","code":"prcp <- aus_temp |>    group_by(id) |>    mutate(prcp = mean(prcp, na.rm = TRUE)) |>    ggplot(aes(x_major = long, y_major = lat, x_minor = month,               ymin_minor = tmin, ymax_minor = tmax,               fill = prcp, color = prcp)) +   geom_sf(data = abs_ste, color = grey(0.7), fill = NA,           inherit.aes = FALSE)  +    add_glyph_boxes() +    add_ref_lines() +    geom_glyph_ribbon() +    coord_sf(xlim = c(112,155)) +   theme_map() +   theme(legend.position.inside = c(.3,0),          legend.direction = \"horizontal\",         panel.background = element_rect(fill = \"white\", color = NA),         plot.background = element_rect(fill = \"white\", color = NA)) +   scale_fill_gradientn(colors = c(\"#ADD8E6\", \"#2b5e82\", \"dodgerblue4\")) +   scale_color_gradientn(colors = c( \"#ADD8E6\", \"#2b5e82\", \"dodgerblue4\"))      # Using gridExtra and grid packages to add neat line to the plot grid.arrange(prcp, ncol = 1)  grid.rect(     width = 0.98,     height = 0.98,     gp = grid::gpar(       lwd = 0.25,       col = \"black\",       fill = NA     )   )"},{"path":"/articles/Examples.html","id":"comparative-visualization-by-factors-across-years","dir":"Articles","previous_headings":"Examples > GeomGlyphRibbon","what":"Comparative visualization by factors across years","title":"Examples","text":"(……)","code":"fact <- historical_temp |>   filter(id %in% c(\"ASN00026021\", \"ASN00085291\", \"ASN00084143\")) |>    ggplot(aes(color = factor(year), fill = factor(year), group = interaction(year,id),               x_major = long, y_major = lat, x_minor = month,                ymin_minor = tmin, ymax_minor = tmax)) +   geom_sf(data = abs_ste |> filter(NAME == \"Victoria\"),            fill = NA, color = grey(0.7),            inherit.aes = FALSE)  +    add_glyph_boxes() +    add_ref_lines() +    geom_glyph_ribbon(alpha = 0.5) +    coord_sf(xlim = c(140,150)) +   labs(x = \"Longitude\", y = \"Latitude\") +   theme_map() +   theme(legend.position.inside = c(.3,0.9),          legend.direction = \"horizontal\",         panel.background = element_rect(fill = \"white\", color = NA),         plot.background = element_rect(fill = \"white\", color = NA)) +   scale_colour_wsj(\"colors6\") +   scale_fill_wsj(\"colors6\")   # Using gridExtra and grid packages to add neat line to the plot grid.arrange(fact, ncol = 1)  grid.rect(     width = 0.98,     height = 0.98,     gp = grid::gpar(       lwd = 0.25,       col = \"black\",       fill = NA     )   )"},{"path":"/articles/Examples.html","id":"integrating-legends-in-map-visualizations","dir":"Articles","previous_headings":"Examples > GeomGlyphRibbon","what":"Integrating legends in map visualizations","title":"Examples","text":"(……)","code":"legend <- aus_temp |>    ggplot(aes(x_major = long, y_major = lat,               x_minor = month, ymin_minor = tmin, ymax_minor = tmax)) +   geom_sf(data = abs_ste ,            fill = NA, color = grey(0.7),            inherit.aes = FALSE)  +   add_glyph_boxes() +   add_ref_lines() +   geom_glyph_ribbon() +    add_ribbon_legend() +    theme_map()   # Using gridExtra and grid packages to add neat line to the plot grid.arrange(legend, ncol = 1)  grid.rect(     width = 0.98,     height = 0.98,     gp = grid::gpar(       lwd = 0.25,       col = \"black\",       fill = NA     )   )"},{"path":"/articles/Examples.html","id":"geomsegmentglyph","dir":"Articles","previous_headings":"Examples","what":"GeomSegmentGlyph","title":"Examples","text":"","code":"aus_temp |>   filter(id %in% sample(id, 18)) |>   ggplot(aes(x_major = long, y_major = lat,                        x_minor = month, ymin_minor = tmin,                        ymax_minor = tmax)) +   geom_sf(data = abs_ste ,            fill = NA, color = grey(0.7),            inherit.aes = FALSE)  +   add_glyph_boxes(width = 4, height = 3) +   add_ref_lines(width = 4, height = 3) +   geom_glyph_segment(width = 4, height = 3) +   coord_sf(xlim = c(110,155)) +   theme_map()"},{"path":"/articles/geom_segment_glyph.html","id":"geomsegmentglyph","dir":"Articles","previous_headings":"","what":"GeomSegmentGlyph","title":"geom_glyph_segment","text":"Glyph Maps allow data visualized across geographic regions different periods time (see cubble information). Line Segment Glyphs extend adding options visualize multivariate spatio-temporal data. aesthetics similar geom_segment x y major variables order designate glyph placement.","code":""},{"path":"/articles/geom_segment_glyph.html","id":"monthly-temperatures-across-the-us","dir":"Articles","previous_headings":"","what":"Monthly Temperatures Across the US","title":"geom_glyph_segment","text":"National Oceanica Atmosphere Administration (NOAA) provides weather data stations US. stations dataset contains climate variables prerciptation, temperature, elevation 10 different weather stations every day 2020 2023. example, interesting finding average minimum maximum temperature per month across days years per station. using dplyr functions group_by summarise default rescaling parameters, resulting geom segment glyph along geom_point help illustrate station location segment glyph corresponds . GeomSegmentGlyph additionally offers ways rescale glyphs. , can specify rescale11x preferred rescaling x center glyph station. Furthermore, options y-scaling include centering glyph vertically station location. rescaling past examples made global rescaling enabled (default) results glyphs differently sized according values relative . Turning global rescaling allows glpyhs rescale within individual values produce glyphs sized evenly.","code":"stations grouped <- stations |>   group_by(month, name, long, lat) |>   summarise(     avgmin = mean(tmin, na.rm = TRUE),     avgmax = mean(tmax, na.rm = TRUE) ) ggplot(data = grouped) +   geom_sf(data = mainland_us, color = \"white\") +   ggthemes::theme_map() +   geom_point(aes(x = long, y = lat)) +   geom_glyph_segment(     width = 0.4,     height = 0.1,     aes(     x_major = long,      y_major = lat,      x_minor = month,      y_minor = avgmin,      yend_minor = avgmax)     ) ggplot(data = grouped) +   geom_sf(data = mainland_us, color = \"white\") +   ggthemes::theme_map() +   geom_point(aes(x = long, y = lat)) +   geom_glyph_segment(     x_scale = rescale11x,     width = 2,     height = 0.1,     aes(     x_major = long,      y_major = lat,      x_minor = month,      y_minor = avgmin,      yend_minor = avgmax)     ) ggplot(data = grouped) +   geom_sf(data = mainland_us, color = \"white\") +   ggthemes::theme_map() +   geom_point(aes(x = long, y = lat)) +   geom_glyph_segment(     x_scale = rescale11x,     y_scale = rescale01y,     width = 2,     height = 3,     aes(     x_major = long,      y_major = lat,      x_minor = month,      y_minor = avgmin,      yend_minor = avgmax)     ) ggplot(data = grouped) +   geom_sf(data = mainland_us, color = \"white\") +   ggthemes::theme_map() +   geom_point(aes(x = long, y = lat)) +   geom_glyph_segment(     x_scale = rescale11x,     y_scale = rescale01y,     global_rescale = FALSE,     width = 2,     height = 3,     aes(     x_major = long,      y_major = lat,      x_minor = month,      y_minor = avgmin,      yend_minor = avgmax)     )"},{"path":"/articles/geom_segment_glyph.html","id":"observations-and-insights","dir":"Articles","previous_headings":"","what":"Observations and Insights","title":"geom_glyph_segment","text":"Line Segment Glyphs offer unique insights seasonal temperature trends across US. Turning global rescaling shows stations generally followed curvature trends relative lowest temperatures. However factoring global rescaling, certain locations show much less total variation temperature California Florida.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maliny Po. Author, maintainer. Nathan Yang. Author. H. Sherry Zhang. Contributor. Dianne Cook. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Po M, Yang N (2024). ribbon: \"Ribbon\" ggplot2 extension geom ribbon. R package version 0.0.0.9000.","code":"@Manual{,   title = {ribbon: \"Ribbon\" ggplot2 extension for geom ribbon},   author = {Maliny Po and Nathan Yang},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"","text":"ribbon provides ggplot2 extension produce glyph plots geom_glyph_ribbon(), add_glyph_boxes() add_ref_lines(). functions create ribbon geometry designed display glyphs based combination x_major y_major. x_minor value, geom_glyph_ribbon() displays y interval defined ymin_minor ymax_minor.","code":"library(ribbon) library(sf) library(ggplot2)  aus_temp |>   ggplot(aes(x_major = long, y_major = lat,             x_minor = month, ymin_minor = tmin, ymax_minor = tmax)) +   geom_sf(data = ozmaps::abs_ste, fill = \"grey95\",           color = \"white\", inherit.aes = FALSE) +   add_glyph_boxes() +   add_ref_lines() +   geom_glyph_ribbon() +   coord_sf(xlim = c(113, 154)) +   theme_glyph()"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"","text":"","code":"# Download the development version from GitHub: devtools::install_github(\"maliny12/ribbon\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"","text":"See examples page learn use ribbon project.","code":""},{"path":"/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"","text":"Click one images go see code example:","code":""},{"path":"/reference/GeomGlyphBox.html","id":null,"dir":"Reference","previous_headings":"","what":"GeomGlyphBox — GeomGlyphBox","title":"GeomGlyphBox — GeomGlyphBox","text":"GeomGlyphBox","code":""},{"path":"/reference/GeomGlyphLegend.html","id":null,"dir":"Reference","previous_headings":"","what":"GeomGlyphLegend — GeomGlyphLegend","title":"GeomGlyphLegend — GeomGlyphLegend","text":"GeomGlyphLegend","code":""},{"path":"/reference/GeomGlyphLine.html","id":null,"dir":"Reference","previous_headings":"","what":"GeomGlyphLine — GeomGlyphLine","title":"GeomGlyphLine — GeomGlyphLine","text":"GeomGlyphLine","code":""},{"path":"/reference/GeomGlyphRibbon.html","id":null,"dir":"Reference","previous_headings":"","what":"GeomGlyphRibbon — GeomGlyphRibbon","title":"GeomGlyphRibbon — GeomGlyphRibbon","text":"GeomGlyphRibbon","code":""},{"path":"/reference/GeomSegmentGlyph.html","id":null,"dir":"Reference","previous_headings":"","what":"GeomSegmentGlyph — GeomSegmentGlyph","title":"GeomSegmentGlyph — GeomSegmentGlyph","text":"GeomSegmentGlyph","code":""},{"path":"/reference/add_glyph_boxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Glyph Boxes layer to glyph plot — add_glyph_boxes","title":"Add Glyph Boxes layer to glyph plot — add_glyph_boxes","text":"function introduces custom layer ggplot, employing 'glyph boxes' visually represent individual glyph. Users can specify various aesthetics including alpha, height, width, color, line type, fill customize appearance.","code":""},{"path":"/reference/add_glyph_boxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Glyph Boxes layer to glyph plot — add_glyph_boxes","text":"","code":"add_glyph_boxes(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   x_major = NULL,   y_major = NULL,   x_minor = NULL,   ymin_minor = NULL,   ymax_minor = NULL,   alpha = 1,   height = ggplot2::rel(2),   width = ggplot2::rel(2.3),   fill = \"white\",   inherit.aes = TRUE,   show.legend = NA,   ... )"},{"path":"/reference/add_glyph_boxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Glyph Boxes layer to glyph plot — add_glyph_boxes","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. NULL, default, data inherited plot data specified call ggplot(). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. x_major, y_major, x_minor, ymin_minor, ymax_minor Aesthetics map plot coordinates major minor glyph components. alpha transparency level glyph box (ranges 0 1). height, width relative height width glyph box. fill color used fill glyph box. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. ... Additional arguments passed function.","code":""},{"path":"/reference/add_glyph_boxes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Glyph Boxes layer to glyph plot — add_glyph_boxes","text":"layer object can added ggplot.","code":""},{"path":"/reference/add_ref_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Add reference lines to glyph plot — add_ref_lines","title":"Add reference lines to glyph plot — add_ref_lines","text":"function draw reference lines include major minor division markers.","code":""},{"path":"/reference/add_ref_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add reference lines to glyph plot — add_ref_lines","text":"","code":"add_ref_lines(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   show.legend = NA,   x_major = NULL,   y_major = NULL,   x_minor = NULL,   ymin_minor = NULL,   ymax_minor = NULL,   height = ggplot2::rel(2),   width = ggplot2::rel(2.3),   inherit.aes = TRUE,   ... )"},{"path":"/reference/add_ref_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add reference lines to glyph plot — add_ref_lines","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. NULL, default, data inherited plot data specified call ggplot(). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. x_major, y_major, x_minor, ymin_minor, ymax_minor Aesthetics map plot coordinates major minor glyph components. height, width relative height width glyph box. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Additional arguments passed function.","code":""},{"path":"/reference/add_ref_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add reference lines to glyph plot — add_ref_lines","text":"ggplot2 layer.","code":""},{"path":"/reference/add_ribbon_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Ribbon Legend Layer to a ggplot — add_ribbon_legend","title":"Add Ribbon Legend Layer to a ggplot — add_ribbon_legend","text":"function adds custom ribbon legend layer ggplot object using specified aesthetics parameters.","code":""},{"path":"/reference/add_ribbon_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Ribbon Legend Layer to a ggplot — add_ribbon_legend","text":"","code":"add_ribbon_legend(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   show.legend = NA,   x_minor = NULL,   ymin_minor = NULL,   ymax_minor = NULL,   x_scale = identity,   y_scale = identity,   global_rescale = TRUE,   inherit.aes = TRUE,   ... )"},{"path":"/reference/add_ribbon_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Ribbon Legend Layer to a ggplot — add_ribbon_legend","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. x_minor, ymin_minor, ymax_minor Aesthetics map plot coordinates major minor glyph components. x_scale, y_scale scaling function applied set minor values within grid cell. Defaults `identity`. global_rescale setting determines whether perform rescaling globally individual glyphs. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Additional arguments passed function.","code":""},{"path":"/reference/add_ribbon_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Ribbon Legend Layer to a ggplot — add_ribbon_legend","text":"ggplot2 layer.","code":""},{"path":"/reference/aus_temp.html","id":null,"dir":"Reference","previous_headings":"","what":"Australian Weather Data for 2022 — aus_temp","title":"Australian Weather Data for 2022 — aus_temp","text":"dataset contains aggregated monthly average temperatures (minimum maximum) precipitation selected Australian weather stations year 2022. Stations selected based specific criteria operational status completeness data year.","code":""},{"path":"/reference/aus_temp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Australian Weather Data for 2022 — aus_temp","text":"","code":"aus_temp"},{"path":"/reference/aus_temp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Australian Weather Data for 2022 — aus_temp","text":"data frame following columns: id Station ID. long Longitude station. lat Latitude station. month Month aggregated data. tmin Monthly average minimum temperature (degrees Celsius). tmax Monthly average maximum temperature (degrees Celsius). prcp Monthly average precipitation (mm).","code":""},{"path":"/reference/aus_temp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Australian Weather Data for 2022 — aus_temp","text":"GHCN Daily data via `meteo_pull_monitors` `rnoaa` package.","code":""},{"path":"/reference/custom_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve scaling function — custom_scale","title":"Retrieve scaling function — custom_scale","text":"Retrieve scaling function","code":""},{"path":"/reference/custom_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve scaling function — custom_scale","text":"","code":"custom_scale(dx)"},{"path":"/reference/geom_glyph_ribbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Glyph Ribbon plot using ggplot2 — geom_glyph_ribbon","title":"Create a Glyph Ribbon plot using ggplot2 — geom_glyph_ribbon","text":"function creates ribbon geometry designed display glyphs based combination `x_major` `y_major`. `x_minor` value, `geom_glyph_ribbon()` displays y interval defined `ymin_minor` `ymax_minor`.","code":""},{"path":"/reference/geom_glyph_ribbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Glyph Ribbon plot using ggplot2 — geom_glyph_ribbon","text":"","code":"geom_glyph_ribbon(   mapping = NULL,   data = NULL,   show.legend = NA,   stat = \"identity\",   position = \"identity\",   x_major = NULL,   y_major = NULL,   x_minor = NULL,   ymin_minor = NULL,   ymax_minor = NULL,   height = ggplot2::rel(2),   width = ggplot2::rel(2.3),   x_scale = identity,   y_scale = identity,   global_rescale = TRUE,   inherit.aes = TRUE,   ... )"},{"path":"/reference/geom_glyph_ribbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Glyph Ribbon plot using ggplot2 — geom_glyph_ribbon","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. x_major, y_major, x_minor, ymin_minor, ymax_minor combination `x_major` `y_major` forms unique grid cell. `ymin_minor` `ymax_minor` define lower upper bounds geom_ribbon. height, width height width glyph. x_scale, y_scale scaling function applied set minor values within grid cell. Defaults `identity`. global_rescale setting determines whether perform rescaling globally individual glyphs. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Additional arguments passed function.","code":""},{"path":"/reference/geom_glyph_ribbon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Glyph Ribbon plot using ggplot2 — geom_glyph_ribbon","text":"ggplot object.","code":""},{"path":"/reference/geom_glyph_ribbon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Glyph Ribbon plot using ggplot2 — geom_glyph_ribbon","text":"","code":"library(ggplot2) #> Warning: package ‘ggplot2’ was built under R version 4.2.3  # Basic glyph map with base map and custom theme aus_temp |>   ggplot(aes(x_major = long, y_major = lat,          x_minor = month, ymin_minor = tmin, ymax_minor = tmax)) +   geom_sf(data = ozmaps::abs_ste, fill = \"grey95\",           color = \"white\",inherit.aes = FALSE) +   geom_glyph_ribbon() +   theme_glyph()    # Adjust width and height of the glyph aus_temp |>   ggplot(aes(x_major = long, y_major = lat,          x_minor = month, ymin_minor = tmin, ymax_minor = tmax)) +   geom_sf(data = ozmaps::abs_ste, fill = \"grey95\",           color = \"white\",inherit.aes = FALSE) +   geom_glyph_ribbon(width = rel(4.5), height = rel(3)) +  theme_glyph()   # Extend glyph map with reference box and line aus_temp |>  ggplot(aes(x_major = long, y_major = lat,          x_minor = month, ymin_minor = tmin, ymax_minor = tmax)) +   geom_sf(data = ozmaps::abs_ste, fill = \"grey95\",           color = \"white\",inherit.aes = FALSE) +   add_glyph_boxes(width = rel(4.5), height = rel(3)) +   add_ref_lines(width = rel(4.5), height = rel(3)) +   geom_glyph_ribbon(width = rel(4.5), height = rel(3)) +   theme_glyph()"},{"path":"/reference/geom_glyph_segment.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Glyph Segment plot using ggplot2 — geom_glyph_segment","title":"Create a Glyph Segment plot using ggplot2 — geom_glyph_segment","text":"function enables creation segment glyphs defining major coordinates (longitude latitude) minor segment structures within grid cell. glyph's appearance can customized specifying height, width, scaling, allowing flexible data representation visual context.","code":""},{"path":"/reference/geom_glyph_segment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Glyph Segment plot using ggplot2 — geom_glyph_segment","text":"","code":"geom_glyph_segment(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   x_major = NULL,   x_minor = NULL,   y_major = NULL,   ymin_minor = NULL,   ymax_minor = NULL,   width = ggplot2::rel(2.3),   x_scale = identity,   y_scale = identity,   height = ggplot2::rel(2),   global_rescale = TRUE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_glyph_segment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Glyph Segment plot using ggplot2 — geom_glyph_segment","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, either ggproto Geom subclass string naming stat stripped stat_ prefix (e.g. \"count\" rather \"stat_count\") position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. x_major, x_minor, y_major, ymin_minor, ymax_minor name variable (string) major minor x y axes. x_major y_major specify longitude latitude map x_minor, ymin_minor, ymax_minor provide structure glyph. y_scale, x_scale scaling function applied set minor values within grid cell. default identity produces result without scaling. height, width height width glyph. global_rescale Determines whether rescaling performed globally separately individual glyph. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_glyph_segment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Glyph Segment plot using ggplot2 — geom_glyph_segment","text":"ggplot object","code":""},{"path":"/reference/geom_glyph_segment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Glyph Segment plot using ggplot2 — geom_glyph_segment","text":"","code":"library(ggplot2)  # Basic glyph map with base map and custom theme aus_temp |>   ggplot(aes(x_major = long, y_major = lat,          x_minor = month, ymin_minor = tmin, ymax_minor = tmax)) +   geom_sf(data = ozmaps::abs_ste, fill = \"grey95\",           color = \"white\",inherit.aes = FALSE) +   geom_glyph_segment() +   theme_glyph()    # Adjust width and height of the glyph aus_temp |>   ggplot(aes(x_major = long, y_major = lat,          x_minor = month, ymin_minor = tmin, ymax_minor = tmax)) +   geom_sf(data = ozmaps::abs_ste, fill = \"grey95\",           color = \"white\",inherit.aes = FALSE) +   geom_glyph_segment(width = rel(4.5), height = rel(3)) +  theme_glyph()   # Extend glyph map with reference box and line aus_temp |>  ggplot(aes(x_major = long, y_major = lat,          x_minor = month, ymin_minor = tmin, ymax_minor = tmax)) +   geom_sf(data = ozmaps::abs_ste, fill = \"grey95\",           color = \"white\",inherit.aes = FALSE) +   add_glyph_boxes(width = rel(4.5), height = rel(3)) +   add_ref_lines(width = rel(4.5), height = rel(3)) +   geom_glyph_segment(width = rel(4.5), height = rel(3)) +   theme_glyph()"},{"path":"/reference/geom_segment_glyph.html","id":null,"dir":"Reference","previous_headings":"","what":"GeomSegmentGlyph — geom_segment_glyph","title":"GeomSegmentGlyph — geom_segment_glyph","text":"(Need description)","code":""},{"path":"/reference/geom_segment_glyph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GeomSegmentGlyph — geom_segment_glyph","text":"","code":"geom_segment_glyph(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   x_major = NULL,   x_minor = NULL,   y_major = NULL,   ymin_minor = NULL,   ymax_minor = NULL,   width = ggplot2::rel(2.3),   x_scale = identity,   y_scale = identity,   height = ggplot2::rel(2),   global_rescale = TRUE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_segment_glyph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GeomSegmentGlyph — geom_segment_glyph","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, either ggproto Geom subclass string naming stat stripped stat_ prefix (e.g. \"count\" rather \"stat_count\") position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. x_major, x_minor, y_major, ymin_minor, ymax_minor name variable (string) major minor x y axes. x_major y_major specify longitude latitude map x_minor, ymin_minor, ymax_minor provide structure glyph. y_scale, x_scale scaling function applied set minor values within grid cell. default identity produces result without scaling. height, width height width glyph. global_rescale Determines whether rescaling performed globally separately individual glyph. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_segment_glyph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GeomSegmentGlyph — geom_segment_glyph","text":"ggplot object (Need examples)","code":""},{"path":"/reference/get_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve function from global environment — get_scale","title":"Retrieve function from global environment — get_scale","text":"Retrieve function global environment","code":""},{"path":"/reference/get_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve function from global environment — get_scale","text":"","code":"get_scale(x)"},{"path":"/reference/glyph.html","id":null,"dir":"Reference","previous_headings":"","what":"GeomSegmentGlyph — geom_segment_glyph","title":"GeomSegmentGlyph — geom_segment_glyph","text":"GeomSegmentGlyph","code":""},{"path":"/reference/glyph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GeomSegmentGlyph — geom_segment_glyph","text":"","code":"geom_segment_glyph(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   x_major = NULL,   x_minor = NULL,   y_major = NULL,   y_minor = NULL,   yend_minor = NULL,   width = 0.1,   x_scale = identity,   y_scale = identity,   height = 0.1,   global_rescale = TRUE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/glyph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GeomSegmentGlyph — geom_segment_glyph","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, either ggproto Geom subclass string naming stat stripped stat_ prefix (e.g. \"count\" rather \"stat_count\") position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. x_major, x_minor, y_major, y_minor, xend_minor, yend_minor name variable (string) major minor x y axes. x_major y_major specify longitude latitude map x_minor, y_minor, xend_minor, yend_minor provide structure glyph. y_scale, x_scale scaling function applied set minor values within grid cell. default identity produces result without scaling. height, width height width glyph. global_rescale Determines whether rescaling performed globally separately individual glyph. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/glyph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GeomSegmentGlyph — geom_segment_glyph","text":"ggplot object","code":""},{"path":"/reference/glyph_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Create reference boxes for glyph plot — glyph_box","title":"Create reference boxes for glyph plot — glyph_box","text":"Create reference boxes glyph plot","code":""},{"path":"/reference/glyph_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create reference boxes for glyph plot — glyph_box","text":"","code":"glyph_box(data, params)"},{"path":"/reference/glyph_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Scaled positional adjustment — glyph_mapping","title":"Scaled positional adjustment — glyph_mapping","text":"Scaled positional adjustment","code":""},{"path":"/reference/glyph_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scaled positional adjustment — glyph_mapping","text":"","code":"glyph_mapping(spatial, scaled_value, length)"},{"path":"/reference/glyph_setup_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data for geom_glyph_ribbon — glyph_setup_data","title":"Prepare data for geom_glyph_ribbon — glyph_setup_data","text":"Prepare data geom_glyph_ribbon","code":""},{"path":"/reference/glyph_setup_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data for geom_glyph_ribbon — glyph_setup_data","text":"","code":"glyph_setup_data(data, params, ...)"},{"path":"/reference/glyph_setup_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ggplot2 object into grob — glyph_setup_grob","title":"Convert ggplot2 object into grob — glyph_setup_grob","text":"Convert ggplot2 object grob","code":""},{"path":"/reference/glyph_setup_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ggplot2 object into grob — glyph_setup_grob","text":"","code":"glyph_setup_grob(data, panel_params)"},{"path":"/reference/historical_temp.html","id":null,"dir":"Reference","previous_headings":"","what":"Historical Australian Weather Data for 2021-2022 — historical_temp","title":"Historical Australian Weather Data for 2021-2022 — historical_temp","text":"dataset contains aggregated monthly average temperatures (minimum maximum) precipitation selected Australian weather stations years 2021 2022. provides broader historical perspective compared `aus_temp`. Stations selected based operational status data completeness.","code":""},{"path":"/reference/historical_temp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Historical Australian Weather Data for 2021-2022 — historical_temp","text":"","code":"historical_temp"},{"path":"/reference/historical_temp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Historical Australian Weather Data for 2021-2022 — historical_temp","text":"data frame following columns: id Station ID. long Longitude station. lat Latitude station. month Month aggregated data. year Year aggregated data, either 2021 2022. tmin Monthly average minimum temperature (degrees Celsius). tmax Monthly average maximum temperature (degrees Celsius). prcp Monthly average precipitation (mm).","code":""},{"path":"/reference/historical_temp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Historical Australian Weather Data for 2021-2022 — historical_temp","text":"GHCN Daily data via `meteo_pull_monitors` `rnoaa` package.","code":""},{"path":"/reference/ref_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate reference lines for glyph plot — ref_line","title":"Calculate reference lines for glyph plot — ref_line","text":"Calculate reference lines glyph plot","code":""},{"path":"/reference/ref_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate reference lines for glyph plot — ref_line","text":"","code":"ref_line(data, params)"},{"path":"/reference/rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale Functions — rescale","title":"Rescale Functions — rescale","text":"Adjust minor axes fit within interval [-1,1] #' @param x numeric vector","code":""},{"path":"/reference/rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale Functions — rescale","text":"","code":"rescale(dx)  rescale01y(y, yend, ylim = NULL)  rescale11y(y, yend, xlim = NULL)"},{"path":"/reference/theme_glyph.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a Custom Glyph Theme to ggplot2 Plots — theme_glyph","title":"Apply a Custom Glyph Theme to ggplot2 Plots — theme_glyph","text":"function customizes appearance ggplot2 plots applying black--white theme specified font settings various plot components. allows easy customization font used throughout plot maintaining clean professional look.","code":""},{"path":"/reference/theme_glyph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a Custom Glyph Theme to ggplot2 Plots — theme_glyph","text":"","code":"theme_glyph(font = \"sans\")"},{"path":"/reference/theme_glyph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a Custom Glyph Theme to ggplot2 Plots — theme_glyph","text":"font character string specifying font family use text elements plot. default \"sans\".","code":""},{"path":"/reference/theme_glyph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a Custom Glyph Theme to ggplot2 Plots — theme_glyph","text":"ggplot2 theme object can added ggplot2 plot objects using `+` operator.","code":""},{"path":"/reference/theme_glyph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a Custom Glyph Theme to ggplot2 Plots — theme_glyph","text":"","code":"library(ggplot2) # Basic usage with default font p <- ggplot(mpg, aes(displ, hwy)) +   geom_point() +   theme_glyph() print(p)   # Usage with a custom font p <- ggplot(mpg, aes(displ, hwy)) +   geom_point() +   theme_glyph(font = \"serif\") print(p)"}]
